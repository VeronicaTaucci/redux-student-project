{"ast":null,"code":"var _jsxFileName = \"/Users/veronica.t/Desktop/digital-crafts/feb-2022-cohort/lectures/week13/1-Monday/YOUR-LectureNotes/fullStack/hw-redux-101/src/components/UpdateStudent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UpdateStudent = () => {\n  _s();\n\n  const students = useSelector(state => state.students);\n  const dispatch = useDispatch();\n  const id = useSelector(state => state.students.id);\n  const currentStudent = students.find(student => student.id === id);\n  const [fName, setFName] = useState('');\n  const [city, setCity] = useState(''); // Update James' city information to Atlanta \n  // useEffect(() => {\n  //   setFName(currentStudent.fName)\n  //   setCity(currentStudent.city)\n  // }, [currentStudent])\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!fName || !city) {\n      return alert('please fill in all fields');\n    }\n\n    const updateStudent = {\n      id: uuidv4(),\n      fName,\n      city\n    }; // console.log(newStudent);\n\n    dispatch({\n      type: \"UPDATE_STUDENT\",\n      payload: updateStudent\n    });\n    setCity('');\n    setFName('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Update student\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: students.map(student => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [student.fName, \" , \", student.city, \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 72\n          }, this)]\n        }, student.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"first name\",\n        value: fName,\n        onChange: e => setFName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"city\",\n        value: city,\n        onChange: e => setCity(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add New Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UpdateStudent, \"mZeu9cuzYUXs0EjapNSK7acpiGQ=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = UpdateStudent;\nexport default UpdateStudent;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateStudent\");","map":{"version":3,"sources":["/Users/veronica.t/Desktop/digital-crafts/feb-2022-cohort/lectures/week13/1-Monday/YOUR-LectureNotes/fullStack/hw-redux-101/src/components/UpdateStudent.jsx"],"names":["React","useEffect","useState","useSelector","useDispatch","UpdateStudent","students","state","dispatch","id","currentStudent","find","student","fName","setFName","city","setCity","handleSubmit","e","preventDefault","alert","updateStudent","uuidv4","type","payload","map","target","value"],"mappings":";;;AACA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAyC,OAAzC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAMC,QAAQ,GAAGH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACD,QAAhB,CAA5B;AACA,QAAME,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,EAAE,GAAGN,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACD,QAAN,CAAeG,EAAzB,CAAtB;AACA,QAAMC,cAAc,GAAGJ,QAAQ,CAACK,IAAT,CAAcC,OAAO,IAAIA,OAAO,CAACH,EAAR,KAAeA,EAAxC,CAAvB;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC,CAN0B,CASxB;AAEF;AACA;AACA;AACA;;AAGA,QAAMe,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI,CAACN,KAAD,IAAU,CAACE,IAAf,EAAqB;AACnB,aAAOK,KAAK,CAAC,2BAAD,CAAZ;AACD;;AACD,UAAMC,aAAa,GAAG;AACpBZ,MAAAA,EAAE,EAAEa,MAAM,EADU;AAEpBT,MAAAA,KAFoB;AAGpBE,MAAAA;AAHoB,KAAtB,CAL0B,CAU1B;;AACAP,IAAAA,QAAQ,CAAC;AACPe,MAAAA,IAAI,EAAE,gBADC;AAEPC,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAIAL,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAF,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAjBD;;AAkBA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGR,QAAQ,CAACmB,GAAT,CAAab,OAAO,IAAI;AACvB,4BAAO;AAAA,qBAAsBA,OAAO,CAACC,KAA9B,SAAwCD,OAAO,CAACG,IAAhD,oBAAsD;AAAG,YAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAtD;AAAA,WAASH,OAAO,CAACH,EAAjB;AAAA;AAAA;AAAA;AAAA,gBAAP;AAID,OALA;AADH;AAAA;AAAA;AAAA;AAAA,YAFF,eAUE;AAAM,MAAA,QAAQ,EAAEQ,YAAhB;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,YAA/B;AAA4C,QAAA,KAAK,EAAEJ,KAAnD;AAA0D,QAAA,QAAQ,EAAEK,CAAC,IAAIJ,QAAQ,CAACI,CAAC,CAACQ,MAAF,CAASC,KAAV;AAAjF;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,MAA/B;AAAsC,QAAA,KAAK,EAAEZ,IAA7C;AAAmD,QAAA,QAAQ,EAAEG,CAAC,IAAIF,OAAO,CAACE,CAAC,CAACQ,MAAF,CAASC,KAAV;AAAzE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA,kBADF;AAkBD,CArDD;;GAAMtB,a;UACaF,W,EACAC,W,EACND,W;;;KAHPE,a;AAuDN,eAAeA,aAAf","sourcesContent":["\nimport React,{useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst UpdateStudent = () => {\n  const students = useSelector(state => state.students)\n  const dispatch = useDispatch();\n  const id = useSelector(state => state.students.id);\n  const currentStudent = students.find(student => student.id === id);\n  const [fName, setFName] = useState('');\n  const [city, setCity] = useState('');\n  \n\n    // Update James' city information to Atlanta \n  \n  // useEffect(() => {\n  //   setFName(currentStudent.fName)\n  //   setCity(currentStudent.city)\n  // }, [currentStudent])\n  \n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!fName || !city) {\n      return alert('please fill in all fields')\n    }\n    const updateStudent = {\n      id: uuidv4(),\n      fName,\n      city\n    }\n    // console.log(newStudent);\n    dispatch({\n      type: \"UPDATE_STUDENT\",\n      payload: updateStudent\n    });\n    setCity('');\n    setFName('');\n  }  \n  return (\n    <>\n      <h1>Update student</h1>\n      <ul>\n        {students.map(student => {\n          return <li key={student.id}>{student.fName} , {student.city} <a href=\"#\" \n          >Update</a>\n            {/* onClick={() => dispatch(removeContact(student.id))} */}\n          </li>\n        })}\n      </ul>\n      <form onSubmit={handleSubmit}>\n        <input type='text' placeholder='first name' value={fName} onChange={e => setFName(e.target.value)} />\n        <input type='text' placeholder='city' value={city} onChange={e => setCity(e.target.value)} />\n        <button type='submit'>Add New Student</button>\n      </form>\n    </>\n  )\n}\n\nexport default UpdateStudent\n"]},"metadata":{},"sourceType":"module"}